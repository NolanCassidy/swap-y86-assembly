init:	irmovl Stack, %esp  	# Set up stack pointer
	irmovl Stack, %ebp  	# Set up base pointer
	call Main		# Execute main program
	halt			# Terminate program

# Array of 4 elements
	.align 4
xp:	.long 0x0001
yp:	.long 0x0002

Main:	pushl %ebp
	rrmovl %esp,%ebp
	irmovl yp,%eax
	pushl %eax # push yp
	irmovl xp,%eax
	pushl %eax # push xp
	call Swap
	rrmovl %ebp,%esp
	popl %ebp
	ret

# int Swap(int *xp, int *yp)
Swap:	pushl %ebp
	rrmovl %esp,%ebp
	pushl %ebx   #push callee-save register
	mrmovl 8(%ebp),%ecx # xp in %ecx
	mrmovl 12(%ebp),%edx # yp in %edx
	# TODO - swap
	mrmovl (%edx), %ebx    #yp in ebx
	mrmovl (%ecx), %eax    #xp in eax
	rmmovl %eax, (%edx)    #xp in edx
	rmmovl %ebx, (%ecx)    #yp in ecx
	popl %ebx              #pop callee
	popl %ebp
	ret

# The stack starts here and grows to lower addresses
	.pos 0x100
Stack:
